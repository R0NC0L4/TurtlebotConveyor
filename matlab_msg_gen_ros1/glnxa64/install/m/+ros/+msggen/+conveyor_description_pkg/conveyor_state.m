
classdef conveyor_state < ros.Message
    %conveyor_state MATLAB implementation of conveyor_description_pkg/conveyor_state
    %   This class was automatically generated by
    %   ros.internal.pubsubEmitter.
    %   Copyright 2014-2020 The MathWorks, Inc.
    properties (Constant)
        MessageType = 'conveyor_description_pkg/conveyor_state' % The ROS message type
    end
    properties (Constant, Hidden)
        MD5Checksum = '96adf6e381d361fa17e96ad4a3f64ab8' % The MD5 Checksum of the message definition
        PropertyList = { 'WheelLr' 'WheelRr' 'WheelLf' 'WheelRf' 'JointLr' 'JointRr' 'JointLf' 'JointRf' } % List of non-constant message properties
        ROSPropertyList = { 'wheel_lr' 'wheel_rr' 'wheel_lf' 'wheel_rf' 'joint_lr' 'joint_rr' 'joint_lf' 'joint_rf' } % List of non-constant ROS message properties
        PropertyMessageTypes = { '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            } % Types of contained nested messages
    end
    properties (Constant)
    end
    properties
        WheelLr
        WheelRr
        WheelLf
        WheelRf
        JointLr
        JointRr
        JointLf
        JointRf
    end
    methods
        function set.WheelLr(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'conveyor_state', 'WheelLr');
            obj.WheelLr = single(val);
        end
        function set.WheelRr(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'conveyor_state', 'WheelRr');
            obj.WheelRr = single(val);
        end
        function set.WheelLf(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'conveyor_state', 'WheelLf');
            obj.WheelLf = single(val);
        end
        function set.WheelRf(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'conveyor_state', 'WheelRf');
            obj.WheelRf = single(val);
        end
        function set.JointLr(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'conveyor_state', 'JointLr');
            obj.JointLr = single(val);
        end
        function set.JointRr(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'conveyor_state', 'JointRr');
            obj.JointRr = single(val);
        end
        function set.JointLf(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'conveyor_state', 'JointLf');
            obj.JointLf = single(val);
        end
        function set.JointRf(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'conveyor_state', 'JointRf');
            obj.JointRf = single(val);
        end
    end
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
        %loadobj Implements loading of message from MAT file
        % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.msggen.conveyor_description_pkg.conveyor_state.empty(0,1);
                return
            end
            % Create an empty message object
            obj = ros.msggen.conveyor_description_pkg.conveyor_state(strObj);
        end
    end
end
