
classdef desired_conf < ros.Message
    %desired_conf MATLAB implementation of conveyor_description_pkg/desired_conf
    %   This class was automatically generated by
    %   ros.internal.pubsubEmitter.
    %   Copyright 2014-2020 The MathWorks, Inc.
    properties (Constant)
        MessageType = 'conveyor_description_pkg/desired_conf' % The ROS message type
    end
    properties (Constant, Hidden)
        MD5Checksum = 'e8b7a946535a91bacc65aff8148d7d6e' % The MD5 Checksum of the message definition
        PropertyList = { 'Velocity' 'AngularVelocity' 'Angle' 'Conf' } % List of non-constant message properties
        ROSPropertyList = { 'velocity' 'angular_velocity' 'angle' 'conf' } % List of non-constant ROS message properties
        PropertyMessageTypes = { '' ...
            '' ...
            '' ...
            '' ...
            } % Types of contained nested messages
    end
    properties (Constant)
    end
    properties
        Velocity
        AngularVelocity
        Angle
        Conf
    end
    methods
        function set.Velocity(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'desired_conf', 'Velocity');
            obj.Velocity = single(val);
        end
        function set.AngularVelocity(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'desired_conf', 'AngularVelocity');
            obj.AngularVelocity = single(val);
        end
        function set.Angle(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'desired_conf', 'Angle');
            obj.Angle = single(val);
        end
        function set.Conf(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'desired_conf', 'Conf');
            obj.Conf = int8(val);
        end
    end
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
        %loadobj Implements loading of message from MAT file
        % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.msggen.conveyor_description_pkg.desired_conf.empty(0,1);
                return
            end
            % Create an empty message object
            obj = ros.msggen.conveyor_description_pkg.desired_conf(strObj);
        end
    end
end
